package com.scarb.model;

import java.util.ArrayList;
import java.util.List;

public class LadderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public LadderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andLeagueIsNull() {
            addCriterion("LEAGUE is null");
            return (Criteria) this;
        }

        public Criteria andLeagueIsNotNull() {
            addCriterion("LEAGUE is not null");
            return (Criteria) this;
        }

        public Criteria andLeagueEqualTo(String value) {
            addCriterion("LEAGUE =", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotEqualTo(String value) {
            addCriterion("LEAGUE <>", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueGreaterThan(String value) {
            addCriterion("LEAGUE >", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueGreaterThanOrEqualTo(String value) {
            addCriterion("LEAGUE >=", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueLessThan(String value) {
            addCriterion("LEAGUE <", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueLessThanOrEqualTo(String value) {
            addCriterion("LEAGUE <=", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueLike(String value) {
            addCriterion("LEAGUE like", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotLike(String value) {
            addCriterion("LEAGUE not like", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueIn(List<String> values) {
            addCriterion("LEAGUE in", values, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotIn(List<String> values) {
            addCriterion("LEAGUE not in", values, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueBetween(String value1, String value2) {
            addCriterion("LEAGUE between", value1, value2, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotBetween(String value1, String value2) {
            addCriterion("LEAGUE not between", value1, value2, "league");
            return (Criteria) this;
        }

        public Criteria andQueueIsNull() {
            addCriterion("QUEUE is null");
            return (Criteria) this;
        }

        public Criteria andQueueIsNotNull() {
            addCriterion("QUEUE is not null");
            return (Criteria) this;
        }

        public Criteria andQueueEqualTo(String value) {
            addCriterion("QUEUE =", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueNotEqualTo(String value) {
            addCriterion("QUEUE <>", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueGreaterThan(String value) {
            addCriterion("QUEUE >", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueGreaterThanOrEqualTo(String value) {
            addCriterion("QUEUE >=", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueLessThan(String value) {
            addCriterion("QUEUE <", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueLessThanOrEqualTo(String value) {
            addCriterion("QUEUE <=", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueLike(String value) {
            addCriterion("QUEUE like", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueNotLike(String value) {
            addCriterion("QUEUE not like", value, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueIn(List<String> values) {
            addCriterion("QUEUE in", values, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueNotIn(List<String> values) {
            addCriterion("QUEUE not in", values, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueBetween(String value1, String value2) {
            addCriterion("QUEUE between", value1, value2, "queue");
            return (Criteria) this;
        }

        public Criteria andQueueNotBetween(String value1, String value2) {
            addCriterion("QUEUE not between", value1, value2, "queue");
            return (Criteria) this;
        }

        public Criteria andPlayernumIsNull() {
            addCriterion("PLAYERNUM is null");
            return (Criteria) this;
        }

        public Criteria andPlayernumIsNotNull() {
            addCriterion("PLAYERNUM is not null");
            return (Criteria) this;
        }

        public Criteria andPlayernumEqualTo(Integer value) {
            addCriterion("PLAYERNUM =", value, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumNotEqualTo(Integer value) {
            addCriterion("PLAYERNUM <>", value, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumGreaterThan(Integer value) {
            addCriterion("PLAYERNUM >", value, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumGreaterThanOrEqualTo(Integer value) {
            addCriterion("PLAYERNUM >=", value, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumLessThan(Integer value) {
            addCriterion("PLAYERNUM <", value, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumLessThanOrEqualTo(Integer value) {
            addCriterion("PLAYERNUM <=", value, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumIn(List<Integer> values) {
            addCriterion("PLAYERNUM in", values, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumNotIn(List<Integer> values) {
            addCriterion("PLAYERNUM not in", values, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumBetween(Integer value1, Integer value2) {
            addCriterion("PLAYERNUM between", value1, value2, "playernum");
            return (Criteria) this;
        }

        public Criteria andPlayernumNotBetween(Integer value1, Integer value2) {
            addCriterion("PLAYERNUM not between", value1, value2, "playernum");
            return (Criteria) this;
        }

        public Criteria andIscurrentIsNull() {
            addCriterion("ISCURRENT is null");
            return (Criteria) this;
        }

        public Criteria andIscurrentIsNotNull() {
            addCriterion("ISCURRENT is not null");
            return (Criteria) this;
        }

        public Criteria andIscurrentEqualTo(Byte value) {
            addCriterion("ISCURRENT =", value, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentNotEqualTo(Byte value) {
            addCriterion("ISCURRENT <>", value, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentGreaterThan(Byte value) {
            addCriterion("ISCURRENT >", value, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentGreaterThanOrEqualTo(Byte value) {
            addCriterion("ISCURRENT >=", value, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentLessThan(Byte value) {
            addCriterion("ISCURRENT <", value, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentLessThanOrEqualTo(Byte value) {
            addCriterion("ISCURRENT <=", value, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentIn(List<Byte> values) {
            addCriterion("ISCURRENT in", values, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentNotIn(List<Byte> values) {
            addCriterion("ISCURRENT not in", values, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentBetween(Byte value1, Byte value2) {
            addCriterion("ISCURRENT between", value1, value2, "iscurrent");
            return (Criteria) this;
        }

        public Criteria andIscurrentNotBetween(Byte value1, Byte value2) {
            addCriterion("ISCURRENT not between", value1, value2, "iscurrent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ladder
     *
     * @mbggenerated do_not_delete_during_merge Thu Sep 08 15:30:41 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ladder
     *
     * @mbggenerated Thu Sep 08 15:30:41 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}